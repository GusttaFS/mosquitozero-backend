// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//yarn prisma migrate dev

model User {
  id       String @id @default(uuid())
  email    String
  password String
  name     String
  data     Json

  visitation_areas VisitationArea[]

  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())

  @@map("users")
}

model Cycle {
  id        String  @id @default(uuid())
  data      Json
  is_active Boolean @default(true)

  visitation_areas VisitationArea[]

  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())

  @@map("cycles")
}

model VisitationArea {
  id                    String @id @default(uuid())
  data                  Json
  num_visitations       Int    @default(0)
  completed_visitations Int    @default(0)

  user        User         @relation(fields: [user_id], references: [id])
  user_id     String
  cycle       Cycle?       @relation(fields: [cycle_id], references: [id])
  cycle_id    String?
  visitations Visitation[]

  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())

  @@map("visitation_areas")
}

model Visitation {
  id           String  @id @default(uuid())
  data         Json
  is_completed Boolean @default(false)

  visitation_area    VisitationArea @relation(fields: [visitation_area_id], references: [id])
  visitation_area_id String

  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())

  @@map("visitations")
}
